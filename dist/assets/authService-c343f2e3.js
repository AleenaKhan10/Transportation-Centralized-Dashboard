import{a as o}from"./index-ecdeb784.js";const n={}.VITE_API_BASE_URL||"http://localhost:8000/api",r=o.create({baseURL:n,timeout:1e4,headers:{"Content-Type":"application/json"}});r.interceptors.request.use(e=>{const t=localStorage.getItem("auth_token");return t&&(e.headers.Authorization=`Bearer ${t}`),e});r.interceptors.response.use(e=>e,e=>{var t;return((t=e.response)==null?void 0:t.status)===401&&(localStorage.removeItem("auth_token"),localStorage.removeItem("refresh_token"),window.location.href="/login"),Promise.reject(e)});const u={login:async e=>r.post("/auth/login",e),signup:async e=>r.post("/auth/signup",e),logout:async()=>r.post("/auth/logout"),refreshToken:async e=>r.post("/auth/refresh",{refreshToken:e}),getCurrentUser:async()=>r.get("/auth/me"),updateProfile:async e=>r.put("/auth/profile",e),forgotPassword:async e=>r.post("/auth/forgot-password",{email:e}),resetPassword:async(e,t)=>r.post("/auth/reset-password",{token:e,password:t}),changePassword:async(e,t)=>r.post("/auth/change-password",{currentPassword:e,newPassword:t}),verifyEmail:async e=>r.post("/auth/verify-email",{token:e}),resendVerification:async()=>r.post("/auth/resend-verification"),checkEmail:async e=>r.post("/auth/check-email",{email:e}),validateToken:async e=>r.post("/auth/validate-token",{token:e})},c={login:async e=>{if(await new Promise(t=>setTimeout(t,1e3)),e.email==="admin@agelogistics.com"&&e.password==="admin123")return{data:{user:{id:"1",email:"admin@agelogistics.com",fullName:"Agy Logistics Admin",phone:"+1234567890",avatar:void 0,role:{id:"1",name:"Super Admin",slug:"super_admin",description:"Full system access",level:100,permissions:[]},permissions:[{id:"1",name:"Manage All",slug:"manage_all",resource:"system",action:"manage",description:"Full system access"}],status:"active",createdAt:"2024-01-01T00:00:00Z",updatedAt:"2024-01-01T00:00:00Z",lastLoginAt:new Date().toISOString()},token:"mock_jwt_token_12345",refreshToken:"mock_refresh_token_12345",expiresIn:3600}};throw new Error("Invalid credentials")},signup:async e=>{if(await new Promise(s=>setTimeout(s,1500)),!e.email||!e.password||!e.fullName)throw new Error("All fields are required");if(e.email==="admin@agelogistics.com")throw new Error("Email already exists");return{data:{id:Math.random().toString(36).substr(2,9),email:e.email,fullName:e.fullName,phone:void 0,avatar:void 0,role:{id:"3",name:"Pending User",slug:"pending",description:"Pending approval",level:0,permissions:[]},permissions:[],status:"pending",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}}},logout:async()=>(await new Promise(e=>setTimeout(e,500)),{data:{success:!0}}),refreshToken:async e=>(await new Promise(t=>setTimeout(t,500)),{data:{token:"new_mock_jwt_token_12345",refreshToken:"new_mock_refresh_token_12345",expiresIn:3600}}),getCurrentUser:async()=>{if(await new Promise(t=>setTimeout(t,500)),!localStorage.getItem("auth_token"))throw new Error("Not authenticated");return{data:{user:JSON.parse(localStorage.getItem("auth_user")||"{}")}}},updateProfile:async e=>{await new Promise(a=>setTimeout(a,1e3));const s={...JSON.parse(localStorage.getItem("auth_user")||"{}"),...e,updatedAt:new Date().toISOString()};return localStorage.setItem("auth_user",JSON.stringify(s)),{data:s}},forgotPassword:async e=>{if(await new Promise(t=>setTimeout(t,1500)),!e)throw new Error("Email is required");return{data:{success:!0,message:"Password reset instructions sent to your email"}}},resetPassword:async(e,t)=>{if(await new Promise(s=>setTimeout(s,1500)),!e||!t)throw new Error("Token and password are required");return{data:{success:!0,message:"Password reset successfully"}}},changePassword:async(e,t)=>{if(await new Promise(s=>setTimeout(s,1e3)),!e||!t)throw new Error("Current and new passwords are required");return{data:{success:!0,message:"Password changed successfully"}}}};export{r as apiClient,u as authService,c as mockAuthService};
//# sourceMappingURL=authService-c343f2e3.js.map
